Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              lcd_driver.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

gScrollMode         0x1               lcd_driver.o
LCD_Data            0x14              lcd_driver.o
gTextBuffer         0x19              lcd_driver.o
gScroll             0x1               lcd_driver.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
LOAD main.o
LOAD bcd.o
LOAD lcd_functions.o
LOAD lcd_driver.o
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x47e
 *(.vectors)
 .vectors       0x0000000000000000       0x5c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x000000000000005c       0x6c lcd_driver.o
                0x000000000000005c                LCD_character_table
                0x00000000000000c8                . = ALIGN (0x2)
                0x00000000000000c8                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000c8        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000c8                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000c8                __ctors_start = .
 *(.ctors)
                0x00000000000000c8                __ctors_end = .
                0x00000000000000c8                __dtors_start = .
 *(.dtors)
                0x00000000000000c8                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000c8        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
                0x00000000000000c8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000c8        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000d4       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x00000000000000d4                __do_copy_data
 .init4         0x00000000000000ea       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000ea                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000fa        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
 *(.init9)
 *(.text)
 .text          0x0000000000000102        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
                0x0000000000000102                __vector_1
                0x0000000000000102                __vector_12
                0x0000000000000102                __bad_interrupt
                0x0000000000000102                __vector_6
                0x0000000000000102                __vector_3
                0x0000000000000102                __vector_11
                0x0000000000000102                __vector_13
                0x0000000000000102                __vector_17
                0x0000000000000102                __vector_19
                0x0000000000000102                __vector_7
                0x0000000000000102                __vector_5
                0x0000000000000102                __vector_4
                0x0000000000000102                __vector_9
                0x0000000000000102                __vector_2
                0x0000000000000102                __vector_21
                0x0000000000000102                __vector_15
                0x0000000000000102                __vector_8
                0x0000000000000102                __vector_14
                0x0000000000000102                __vector_10
                0x0000000000000102                __vector_16
                0x0000000000000102                __vector_18
                0x0000000000000102                __vector_20
 .text          0x0000000000000106        0x0 main.o
 .text          0x0000000000000106       0x60 bcd.o
                0x0000000000000106                CHAR2BCD2
                0x000000000000011e                CHAR2BCD3
 .text          0x0000000000000166       0xf2 lcd_functions.o
                0x0000000000000166                LCD_puts_f
                0x00000000000001c4                LCD_puts
                0x0000000000000214                LCD_putc
                0x0000000000000224                LCD_Clear
                0x0000000000000236                LCD_Colon
                0x000000000000023c                LCD_UpdateRequired
                0x0000000000000252                LCD_FlashReset
 .text          0x0000000000000258      0x20e lcd_driver.o
                0x0000000000000258                LCD_WriteDigit
                0x00000000000002c6                LCD_AllSegments
                0x00000000000002e0                LCD_Init
                0x000000000000030c                __vector_22
 .text          0x0000000000000466        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000466        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000466        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000466                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000466       0x14 main.o
                0x0000000000000466                main
 .text.libgcc.mul
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000047a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000047a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x000000000000047a                exit
                0x000000000000047a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000047a        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000047e                _etext = .

.data           0x0000000000800100        0xe load address 0x000000000000047e
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
 .data          0x0000000000800100        0x0 main.o
 .data          0x0000000000800100        0x0 bcd.o
 .data          0x0000000000800100        0x1 lcd_functions.o
                0x0000000000800100                CONTRAST
 .data          0x0000000000800101        0x1 lcd_driver.o
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800102        0xc main.o
 *(.gnu.linkonce.d*)
                0x000000000080010e                . = ALIGN (0x2)
                0x000000000080010e                _edata = .
                0x000000000080010e                PROVIDE (__data_end, .)

.bss            0x000000000080010e       0x33
                0x000000000080010e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080010e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
 .bss           0x000000000080010e        0x0 main.o
 .bss           0x000000000080010e        0x0 bcd.o
 .bss           0x000000000080010e        0x0 lcd_functions.o
 .bss           0x000000000080010e        0x4 lcd_driver.o
                0x000000000080010e                gColon
                0x000000000080010f                gFlashTimer
                0x0000000000800110                gLCD_Start_Scroll_Timer
                0x0000000000800111                gLCD_Update_Required
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800112       0x2f lcd_driver.o
                0x0000000000800112                gScrollMode
                0x0000000000800113                LCD_Data
                0x0000000000800127                gTextBuffer
                0x0000000000800140                gScroll
                0x0000000000800141                PROVIDE (__bss_end, .)
                0x000000000000047e                __data_load_start = LOADADDR (.data)
                0x000000000000048c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800141        0x0
                0x0000000000800141                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800141                PROVIDE (__noinit_end, .)
                0x0000000000800141                _end = .
                0x0000000000800141                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x1ef0
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
 .stab          0x00000000000006cc      0x510 main.o
                                        0x51c (size before relaxing)
 .stab          0x0000000000000bdc      0x408 bcd.o
                                        0x414 (size before relaxing)
 .stab          0x0000000000000fe4      0x6f0 lcd_functions.o
                                        0x8dc (size before relaxing)
 .stab          0x00000000000016d4      0x81c lcd_driver.o
                                        0xa08 (size before relaxing)

.stabstr        0x0000000000000000     0x1000
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1000 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 bcd.o
 .comment       0x0000000000000000       0x12 lcd_functions.o
 .comment       0x0000000000000000       0x12 lcd_driver.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
CHAR2BCD2                                         bcd.o
CHAR2BCD3                                         bcd.o
CONTRAST                                          lcd_functions.o
LCD_AllSegments                                   lcd_driver.o
LCD_Clear                                         lcd_functions.o
LCD_Colon                                         lcd_functions.o
LCD_Data                                          lcd_driver.o
LCD_FlashReset                                    lcd_functions.o
LCD_Init                                          lcd_driver.o
                                                  main.o
LCD_UpdateRequired                                lcd_functions.o
LCD_WriteDigit                                    lcd_driver.o
LCD_character_table                               lcd_driver.o
LCD_putc                                          lcd_functions.o
LCD_puts                                          lcd_functions.o
                                                  main.o
LCD_puts_f                                        lcd_functions.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                                                  lcd_driver.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                                                  lcd_driver.o
                                                  lcd_functions.o
                                                  main.o
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_11                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_18                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_19                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_21                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_22                                       lcd_driver.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
gColon                                            lcd_driver.o
                                                  lcd_functions.o
gFlashTimer                                       lcd_driver.o
                                                  lcd_functions.o
gLCD_Start_Scroll_Timer                           lcd_driver.o
                                                  lcd_functions.o
gLCD_Update_Required                              lcd_driver.o
                                                  lcd_functions.o
gScroll                                           lcd_driver.o
                                                  lcd_functions.o
gScrollMode                                       lcd_driver.o
                                                  lcd_functions.o
gTextBuffer                                       lcd_driver.o
                                                  lcd_functions.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm169.o
